let time = 0;
let no;
let yes;
let ship;
let blt;
let bullets = [];
let asteroids = [];
let dead = false;

function preload() {
  no = loadImage('rsz_38483.png');
  yes = loadImage('1rsz_38483.png');
}

function setup() {
  createCanvas(windowWidth, windowHeight - 5);
  background(0);
  ship = new Ship;
  imageMode(CENTER);
  setInterval(function() {
    if (dead) {
      return
    } else {
      time++;
      asteroids.push(new Asteroid(random(windowWidth), random(windowHeight), random(-3, 3), random(-3, 3)));
    }
  }, 1000)
}
  

function draw() {
  background(0);
  textSize(20);
  fill(255);
  text(`Time survived: ${time} sec`, 20, 30);
  for (i = 0; i < asteroids.length; i++) {
    asteroids[i].update();
    asteroids[i].render();
  }
  moving1();
  ship.show();
  ship.update();
}

function Ship() {
  this.r = 4.1;
  this.img = no;
  this.pos = createVector(windowWidth / 2, windowHeight / 2);
  this.angle = 0;
  this.xvel = 0;
  this.yvel = 0;
  this.update = function() {
    this.pos.x = this.pos.x + this.xvel;
    this.pos.y = this.pos.y + this.yvel; 
    if (this.pos.x > windowWidth) {
      this.pos.x = 0;
    }
    else if (this.pos.x < 0) {
      this.pos.x = windowWidth;
    }

    else if (this.pos.y > windowHeight) {
      this.pos.y = 0;
    }

    else if (this.pos.y < 0) {
      this.pos.y = windowHeight;
    }
  }
  this.show = function() {
  translate(this.pos.x, this.pos.y);
  rotate(this.angle);
  image(this.img, 0, 0);
  }
}

function Asteroid(x, y, xvel, yvel) {
  this.pos = createVector(x, y);
  while (this.pos.x < ship.pos.x + 500 && this.pos.x > ship.pos.x - 500 && this.pos.y < ship.pos.y + 500 && this.pos.y > ship.pos.y - 500) {
    console.log("change");
    this.pos = createVector(random(windowWidth), random(windowHeight));
  };
  this.d;
  this.r = random(6, 15);
  this.vel = createVector(xvel, yvel);
  this.update = function() {
    this.d = dist(this.pos.x, this.pos.y, ship.pos.x, ship.pos.y);
    //this.pos.add(this.vel);
    if (this.pos.x > windowWidth) {
      this.pos.x = 0;
    }
    else if (this.pos.x < 0) {
      this.pos.x = windowWidth;
    }

    else if (this.pos.y > windowHeight) {
      this.pos.y = 0;
    }

    else if (this.pos.y < 0) {
      this.pos.y = windowHeight;
    }
    else if (dead) {
      this.vel.mult(0);
      ship.xvel = 0;
      ship.yvel = 0;
    }
    else if (this.d < this.r * ship.r) {
    console.log(this.d,this.r, ship.r);
    console.log(this.d, (this.r * ship.r));
    dead = true;
    }
  }
  this.render = function() {
    push();
      stroke(255);
      strokeWeight(2);
      noFill()
      translate(this.pos.x, this.pos.y);
      beginShape();
      for (var i = 0; i < 10; i++) {
        var angle = map(i, 0, 10, 0, TWO_PI);
        var x = (this.r * Math.PI) * cos(angle);
        var y = (this.r * Math.PI) * sin(angle);
        vertex(x, y);
      }
      endShape(CLOSE);
      pop();
  }
}

function moving1() {
  if (dead) {
    return
  } else {
    if (keyIsDown(LEFT_ARROW)) {
      ship.angle -= 0.0872664626 / 3;
    }
  
    if (keyIsDown(RIGHT_ARROW)) {
      ship.angle += 0.0872664626 / 3;
    }

    if (keyIsDown(UP_ARROW)) {
      ship.img = yes;
      fx = Math.cos(ship.angle) * 0.1;
      fy = Math.sin(ship.angle) * 0.1;
      ship.xvel = ship.xvel + fx;
      ship.yvel = ship.yvel + fy;
    } else {
      ship.img = no;
    }
  }
}

